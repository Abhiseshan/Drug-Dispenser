|test
CLOCK_50 => CLOCK_50.IN15
SW[0] => SW[0].IN2
SW[1] => SW[1].IN2
SW[2] => SW[2].IN2
SW[3] => SW[3].IN2
SW[4] => SW[4].IN2
SW[5] => SW[5].IN2
SW[6] => SW[6].IN2
SW[7] => SW[7].IN2
SW[8] => SW[8].IN2
SW[9] => SW[9].IN3
KEY[0] => KEY[0].IN5
KEY[1] => KEY[1].IN1
KEY[2] => KEY[2].IN1
KEY[3] => KEY[3].IN2
LEDR[0] <= <GND>
LEDR[1] <= dispenser:dm1.port6
LEDR[2] <= dispenser:dm2.port6
LEDR[3] <= <GND>
LEDR[4] <= dispenserEnabled:DE1.port3
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
HEX0[6] <= hex:h0.port0
HEX0[5] <= hex:h0.port0
HEX0[4] <= hex:h0.port0
HEX0[3] <= hex:h0.port0
HEX0[2] <= hex:h0.port0
HEX0[1] <= hex:h0.port0
HEX0[0] <= hex:h0.port0
HEX1[6] <= hex:h1.port0
HEX1[5] <= hex:h1.port0
HEX1[4] <= hex:h1.port0
HEX1[3] <= hex:h1.port0
HEX1[2] <= hex:h1.port0
HEX1[1] <= hex:h1.port0
HEX1[0] <= hex:h1.port0
HEX2[6] <= hex:h2.port0
HEX2[5] <= hex:h2.port0
HEX2[4] <= hex:h2.port0
HEX2[3] <= hex:h2.port0
HEX2[2] <= hex:h2.port0
HEX2[1] <= hex:h2.port0
HEX2[0] <= hex:h2.port0
HEX3[6] <= hex:h3.port0
HEX3[5] <= hex:h3.port0
HEX3[4] <= hex:h3.port0
HEX3[3] <= hex:h3.port0
HEX3[2] <= hex:h3.port0
HEX3[1] <= hex:h3.port0
HEX3[0] <= hex:h3.port0
HEX4[6] <= hex:h4.port0
HEX4[5] <= hex:h4.port0
HEX4[4] <= hex:h4.port0
HEX4[3] <= hex:h4.port0
HEX4[2] <= hex:h4.port0
HEX4[1] <= hex:h4.port0
HEX4[0] <= hex:h4.port0
HEX5[6] <= hex:h5.port0
HEX5[5] <= hex:h5.port0
HEX5[4] <= hex:h5.port0
HEX5[3] <= hex:h5.port0
HEX5[2] <= hex:h5.port0
HEX5[1] <= hex:h5.port0
HEX5[0] <= hex:h5.port0
GPIO_0[0] <= dispenser:dm1t.port6
GPIO_0[1] <= <GND>
GPIO_0[2] <= <GND>
GPIO_0[3] <= <GND>
GPIO_0[4] <= <GND>
GPIO_0[5] <= <GND>
GPIO_0[6] <= <GND>
GPIO_0[7] <= <GND>
GPIO_0[8] <= <GND>
GPIO_0[9] <= <GND>
GPIO_0[10] <= <GND>
GPIO_0[11] <= <GND>
GPIO_0[12] <= <GND>
GPIO_0[13] <= <GND>
GPIO_0[14] <= <GND>
GPIO_0[15] <= <GND>
GPIO_0[16] <= <GND>
GPIO_0[17] <= <GND>
GPIO_0[18] <= <GND>
GPIO_0[19] <= <GND>
GPIO_0[20] <= <GND>
GPIO_0[21] <= <GND>
GPIO_0[22] <= <GND>
GPIO_0[23] <= <GND>
GPIO_0[24] <= <GND>
GPIO_0[25] <= <GND>
GPIO_0[26] <= <GND>
GPIO_0[27] <= <GND>
GPIO_0[28] <= <GND>
GPIO_0[29] <= <GND>
GPIO_0[30] <= <GND>
GPIO_0[31] <= <GND>
GPIO_0[32] <= <GND>
GPIO_0[33] <= <GND>
GPIO_0[34] <= <GND>
GPIO_0[35] <= <GND>
AUD_ADCDAT => ~NO_FANOUT~
AUD_BCLK <> <UNC>
AUD_ADCLRCK <> <UNC>
AUD_DACLRCK <> <UNC>
AUD_XCK <= <GND>
AUD_DACDAT <= <GND>
I2C_SDAT <> <UNC>
I2C_SCLK <= <GND>
VGA_CLK <= <GND>
VGA_HS <= <GND>
VGA_VS <= <GND>
VGA_BLANK_N <= <GND>
VGA_SYNC_N <= <GND>
VGA_R[0] <= <GND>
VGA_R[1] <= <GND>
VGA_R[2] <= <GND>
VGA_R[3] <= <GND>
VGA_R[4] <= <GND>
VGA_R[5] <= <GND>
VGA_R[6] <= <GND>
VGA_R[7] <= <GND>
VGA_R[8] <= <GND>
VGA_R[9] <= <GND>
VGA_G[0] <= <GND>
VGA_G[1] <= <GND>
VGA_G[2] <= <GND>
VGA_G[3] <= <GND>
VGA_G[4] <= <GND>
VGA_G[5] <= <GND>
VGA_G[6] <= <GND>
VGA_G[7] <= <GND>
VGA_G[8] <= <GND>
VGA_G[9] <= <GND>
VGA_B[0] <= <GND>
VGA_B[1] <= <GND>
VGA_B[2] <= <GND>
VGA_B[3] <= <GND>
VGA_B[4] <= <GND>
VGA_B[5] <= <GND>
VGA_B[6] <= <GND>
VGA_B[7] <= <GND>
VGA_B[8] <= <GND>
VGA_B[9] <= <GND>


|test|SecondCounter:Sc
CLOCK_50 => pulse~reg0.CLK
CLOCK_50 => counter[0].CLK
CLOCK_50 => counter[1].CLK
CLOCK_50 => counter[2].CLK
CLOCK_50 => counter[3].CLK
CLOCK_50 => counter[4].CLK
CLOCK_50 => counter[5].CLK
CLOCK_50 => counter[6].CLK
CLOCK_50 => counter[7].CLK
CLOCK_50 => counter[8].CLK
CLOCK_50 => counter[9].CLK
CLOCK_50 => counter[10].CLK
CLOCK_50 => counter[11].CLK
CLOCK_50 => counter[12].CLK
CLOCK_50 => counter[13].CLK
CLOCK_50 => counter[14].CLK
CLOCK_50 => counter[15].CLK
CLOCK_50 => counter[16].CLK
CLOCK_50 => counter[17].CLK
CLOCK_50 => counter[18].CLK
CLOCK_50 => counter[19].CLK
CLOCK_50 => counter[20].CLK
CLOCK_50 => counter[21].CLK
CLOCK_50 => counter[22].CLK
CLOCK_50 => counter[23].CLK
CLOCK_50 => counter[24].CLK
CLOCK_50 => counter[25].CLK
CLOCK_50 => counter[26].CLK
CLOCK_50 => counter[27].CLK
CLOCK_50 => counter[28].CLK
CLOCK_50 => counter[29].CLK
CLOCK_50 => counter[30].CLK
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => pulse~reg0.ENA
pulse <= pulse~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|MinuteCounter:Mc
CLOCK_50 => pulse~reg0.CLK
CLOCK_50 => counter[0]~reg0.CLK
CLOCK_50 => counter[1]~reg0.CLK
CLOCK_50 => counter[2]~reg0.CLK
CLOCK_50 => counter[3]~reg0.CLK
CLOCK_50 => counter[4]~reg0.CLK
CLOCK_50 => counter[5]~reg0.CLK
secondsPulse => counter.OUTPUTSELECT
secondsPulse => counter.OUTPUTSELECT
secondsPulse => counter.OUTPUTSELECT
secondsPulse => counter.OUTPUTSELECT
secondsPulse => counter.OUTPUTSELECT
secondsPulse => counter.OUTPUTSELECT
secondsPulse => pulse.OUTPUTSELECT
set => counter.OUTPUTSELECT
set => counter.OUTPUTSELECT
set => counter.OUTPUTSELECT
set => counter.OUTPUTSELECT
set => counter.OUTPUTSELECT
set => counter.OUTPUTSELECT
set => pulse~reg0.ENA
setSeconds[0] => counter.DATAB
setSeconds[1] => counter.DATAB
setSeconds[2] => counter.DATAB
setSeconds[3] => counter.DATAB
setSeconds[4] => counter.DATAB
setSeconds[5] => counter.DATAB
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => pulse.OUTPUTSELECT
pulse <= pulse~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter[0] <= counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter[1] <= counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter[2] <= counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter[3] <= counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter[4] <= counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter[5] <= counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|HourCounter:Hc
CLOCK_50 => pulse~reg0.CLK
CLOCK_50 => counter[0]~reg0.CLK
CLOCK_50 => counter[1]~reg0.CLK
CLOCK_50 => counter[2]~reg0.CLK
CLOCK_50 => counter[3]~reg0.CLK
CLOCK_50 => counter[4]~reg0.CLK
CLOCK_50 => counter[5]~reg0.CLK
MinutesPulse => counter.OUTPUTSELECT
MinutesPulse => counter.OUTPUTSELECT
MinutesPulse => counter.OUTPUTSELECT
MinutesPulse => counter.OUTPUTSELECT
MinutesPulse => counter.OUTPUTSELECT
MinutesPulse => counter.OUTPUTSELECT
MinutesPulse => pulse.OUTPUTSELECT
set => counter.OUTPUTSELECT
set => counter.OUTPUTSELECT
set => counter.OUTPUTSELECT
set => counter.OUTPUTSELECT
set => counter.OUTPUTSELECT
set => counter.OUTPUTSELECT
set => pulse~reg0.ENA
setMinutes[0] => counter.DATAB
setMinutes[1] => counter.DATAB
setMinutes[2] => counter.DATAB
setMinutes[3] => counter.DATAB
setMinutes[4] => counter.DATAB
setMinutes[5] => counter.DATAB
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => pulse.OUTPUTSELECT
pulse <= pulse~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter[0] <= counter[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter[1] <= counter[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter[2] <= counter[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter[3] <= counter[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter[4] <= counter[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter[5] <= counter[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|Hours:H
CLOCK_50 => hours[0]~reg0.CLK
CLOCK_50 => hours[1]~reg0.CLK
CLOCK_50 => hours[2]~reg0.CLK
CLOCK_50 => hours[3]~reg0.CLK
CLOCK_50 => hours[4]~reg0.CLK
hourPulse => hours.OUTPUTSELECT
hourPulse => hours.OUTPUTSELECT
hourPulse => hours.OUTPUTSELECT
hourPulse => hours.OUTPUTSELECT
hourPulse => hours.OUTPUTSELECT
set => hours.OUTPUTSELECT
set => hours.OUTPUTSELECT
set => hours.OUTPUTSELECT
set => hours.OUTPUTSELECT
set => hours.OUTPUTSELECT
setHours[0] => hours.DATAB
setHours[1] => hours.DATAB
setHours[2] => hours.DATAB
setHours[3] => hours.DATAB
setHours[4] => hours.DATAB
reset => hours.OUTPUTSELECT
reset => hours.OUTPUTSELECT
reset => hours.OUTPUTSELECT
reset => hours.OUTPUTSELECT
reset => hours.OUTPUTSELECT
hours[0] <= hours[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hours[1] <= hours[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hours[2] <= hours[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hours[3] <= hours[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hours[4] <= hours[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|setTime:setT
clock => clock.IN1
set => outSeconds.OUTPUTSELECT
set => outSeconds.OUTPUTSELECT
set => outSeconds.OUTPUTSELECT
set => outSeconds.OUTPUTSELECT
set => outSeconds.OUTPUTSELECT
set => outSeconds.OUTPUTSELECT
set => outMinutes.OUTPUTSELECT
set => outMinutes.OUTPUTSELECT
set => outMinutes.OUTPUTSELECT
set => outMinutes.OUTPUTSELECT
set => outMinutes.OUTPUTSELECT
set => outMinutes.OUTPUTSELECT
set => outHours.OUTPUTSELECT
set => outHours.OUTPUTSELECT
set => outHours.OUTPUTSELECT
set => outHours.OUTPUTSELECT
set => outHours.OUTPUTSELECT
seconds[0] => outSeconds.DATAB
seconds[1] => outSeconds.DATAB
seconds[2] => outSeconds.DATAB
seconds[3] => outSeconds.DATAB
seconds[4] => outSeconds.DATAB
seconds[5] => outSeconds.DATAB
hours[0] => outHours.DATAB
hours[1] => outHours.DATAB
hours[2] => outHours.DATAB
hours[3] => outHours.DATAB
hours[4] => outHours.DATAB
minutes[0] => outMinutes.DATAB
minutes[1] => outMinutes.DATAB
minutes[2] => outMinutes.DATAB
minutes[3] => outMinutes.DATAB
minutes[4] => outMinutes.DATAB
minutes[5] => outMinutes.DATAB
incrementHours => outHours.OUTPUTSELECT
incrementHours => outHours.OUTPUTSELECT
incrementHours => outHours.OUTPUTSELECT
incrementHours => outHours.OUTPUTSELECT
incrementHours => outHours.OUTPUTSELECT
incrementMinutes => outMinutes.OUTPUTSELECT
incrementMinutes => outMinutes.OUTPUTSELECT
incrementMinutes => outMinutes.OUTPUTSELECT
incrementMinutes => outMinutes.OUTPUTSELECT
incrementMinutes => outMinutes.OUTPUTSELECT
incrementMinutes => outMinutes.OUTPUTSELECT
incrementSeconds => outSeconds.OUTPUTSELECT
incrementSeconds => outSeconds.OUTPUTSELECT
incrementSeconds => outSeconds.OUTPUTSELECT
incrementSeconds => outSeconds.OUTPUTSELECT
incrementSeconds => outSeconds.OUTPUTSELECT
incrementSeconds => outSeconds.OUTPUTSELECT
secondsP => ~NO_FANOUT~
outHours[0] <= outHours[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outHours[1] <= outHours[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outHours[2] <= outHours[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outHours[3] <= outHours[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outHours[4] <= outHours[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outMinutes[0] <= outMinutes[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outMinutes[1] <= outMinutes[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outMinutes[2] <= outMinutes[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outMinutes[3] <= outMinutes[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outMinutes[4] <= outMinutes[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outMinutes[5] <= outMinutes[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outSeconds[0] <= outSeconds[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outSeconds[1] <= outSeconds[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outSeconds[2] <= outSeconds[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outSeconds[3] <= outSeconds[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outSeconds[4] <= outSeconds[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outSeconds[5] <= outSeconds[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|setTime:setT|buttonPushTimer:bpt
clock => pulse~reg0.CLK
clock => counter[0].CLK
clock => counter[1].CLK
clock => counter[2].CLK
clock => counter[3].CLK
clock => counter[4].CLK
clock => counter[5].CLK
clock => counter[6].CLK
clock => counter[7].CLK
clock => counter[8].CLK
clock => counter[9].CLK
clock => counter[10].CLK
clock => counter[11].CLK
clock => counter[12].CLK
clock => counter[13].CLK
clock => counter[14].CLK
clock => counter[15].CLK
clock => counter[16].CLK
clock => counter[17].CLK
clock => counter[18].CLK
clock => counter[19].CLK
clock => counter[20].CLK
clock => counter[21].CLK
clock => counter[22].CLK
clock => counter[23].CLK
clock => counter[24].CLK
clock => counter[25].CLK
clock => counter[26].CLK
clock => counter[27].CLK
clock => counter[28].CLK
clock => counter[29].CLK
clock => counter[30].CLK
pulse <= pulse~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|clockControlFSM:FSMClk
clock => currentstate~1.DATAIN
set => always1.IN0
set => always1.IN0
set => currentstate.OUTPUTSELECT
set => currentstate.OUTPUTSELECT
set => currentstate.OUTPUTSELECT
set => currentstate.OUTPUTSELECT
set => currentstate.DATAA
set => Selector18.IN3
set => Selector18.IN4
set => Selector17.IN2
set => nextstate.updateMode.DATAB
update <= update$latch.DB_MAX_OUTPUT_PORT_TYPE
reset => currentstate.OUTPUTSELECT
reset => currentstate.OUTPUTSELECT
reset => currentstate.OUTPUTSELECT
reset => currentstate.DATAA
minutes[0] => Selector11.IN3
minutes[1] => Selector10.IN3
minutes[2] => Selector9.IN3
minutes[3] => Selector8.IN3
minutes[4] => Selector7.IN3
minutes[5] => Selector6.IN3
seconds[0] => Selector5.IN3
seconds[1] => Selector4.IN3
seconds[2] => Selector3.IN3
seconds[3] => Selector2.IN3
seconds[4] => Selector1.IN3
seconds[5] => Selector0.IN3
hours[0] => Selector16.IN3
hours[1] => Selector15.IN3
hours[2] => Selector14.IN3
hours[3] => Selector13.IN3
hours[4] => Selector12.IN3
setHours[0] => Selector16.IN4
setHours[1] => Selector15.IN4
setHours[2] => Selector14.IN4
setHours[3] => Selector13.IN4
setHours[4] => Selector12.IN4
setMinutes[0] => Selector11.IN4
setMinutes[1] => Selector10.IN4
setMinutes[2] => Selector9.IN4
setMinutes[3] => Selector8.IN4
setMinutes[4] => Selector7.IN4
setMinutes[5] => Selector6.IN4
setSeconds[0] => Selector5.IN4
setSeconds[1] => Selector4.IN4
setSeconds[2] => Selector3.IN4
setSeconds[3] => Selector2.IN4
setSeconds[4] => Selector1.IN4
setSeconds[5] => Selector0.IN4
outhours[0] <= Selector16.DB_MAX_OUTPUT_PORT_TYPE
outhours[1] <= Selector15.DB_MAX_OUTPUT_PORT_TYPE
outhours[2] <= Selector14.DB_MAX_OUTPUT_PORT_TYPE
outhours[3] <= Selector13.DB_MAX_OUTPUT_PORT_TYPE
outhours[4] <= Selector12.DB_MAX_OUTPUT_PORT_TYPE
outminutes[0] <= Selector11.DB_MAX_OUTPUT_PORT_TYPE
outminutes[1] <= Selector10.DB_MAX_OUTPUT_PORT_TYPE
outminutes[2] <= Selector9.DB_MAX_OUTPUT_PORT_TYPE
outminutes[3] <= Selector8.DB_MAX_OUTPUT_PORT_TYPE
outminutes[4] <= Selector7.DB_MAX_OUTPUT_PORT_TYPE
outminutes[5] <= Selector6.DB_MAX_OUTPUT_PORT_TYPE
outseconds[0] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
outseconds[1] <= Selector4.DB_MAX_OUTPUT_PORT_TYPE
outseconds[2] <= Selector3.DB_MAX_OUTPUT_PORT_TYPE
outseconds[3] <= Selector2.DB_MAX_OUTPUT_PORT_TYPE
outseconds[4] <= Selector1.DB_MAX_OUTPUT_PORT_TYPE
outseconds[5] <= Selector0.DB_MAX_OUTPUT_PORT_TYPE
setInitVal <= setInitVal$latch.DB_MAX_OUTPUT_PORT_TYPE


|test|dispenseTime:dT
clock => dispenseEvening~reg0.CLK
clock => dispenseAfternoon~reg0.CLK
clock => dispenseMorning~reg0.CLK
secondP => dispenseMorning.OUTPUTSELECT
secondP => dispenseAfternoon.OUTPUTSELECT
secondP => dispenseEvening.OUTPUTSELECT
seconds[0] => Equal4.IN31
seconds[1] => Equal4.IN30
seconds[2] => Equal4.IN29
seconds[3] => Equal4.IN28
seconds[4] => Equal4.IN27
seconds[5] => Equal4.IN26
minutes[0] => Equal3.IN31
minutes[1] => Equal3.IN30
minutes[2] => Equal3.IN29
minutes[3] => Equal3.IN28
minutes[4] => Equal3.IN27
minutes[5] => Equal3.IN26
hours[0] => Equal0.IN31
hours[0] => Equal1.IN2
hours[0] => Equal2.IN31
hours[1] => Equal0.IN30
hours[1] => Equal1.IN31
hours[1] => Equal2.IN30
hours[2] => Equal0.IN29
hours[2] => Equal1.IN1
hours[2] => Equal2.IN1
hours[3] => Equal0.IN0
hours[3] => Equal1.IN0
hours[3] => Equal2.IN29
hours[4] => Equal0.IN28
hours[4] => Equal1.IN30
hours[4] => Equal2.IN0
dispenseMorning <= dispenseMorning~reg0.DB_MAX_OUTPUT_PORT_TYPE
dispenseAfternoon <= dispenseAfternoon~reg0.DB_MAX_OUTPUT_PORT_TYPE
dispenseEvening <= dispenseEvening~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|dispenseControlFSM:ccFSM
clock => currentState~1.DATAIN
morningP => currentState.OUTPUTSELECT
morningP => currentState.OUTPUTSELECT
morningP => currentState.OUTPUTSELECT
morningP => currentState.morning.DATAIN
afternoonP => currentState.OUTPUTSELECT
afternoonP => currentState.OUTPUTSELECT
afternoonP => currentState.DATAA
eveningP => currentState.OUTPUTSELECT
eveningP => currentState.DATAA
dispenseMorning <= dispenseMorning.DB_MAX_OUTPUT_PORT_TYPE
dispenseAfternoon <= dispenseAfternoon.DB_MAX_OUTPUT_PORT_TYPE
dispenseEvening <= dispenseEvening.DB_MAX_OUTPUT_PORT_TYPE


|test|dispenseSetter:setter
clock => m2[0]~reg0.CLK
clock => m2[1]~reg0.CLK
clock => m2[2]~reg0.CLK
clock => m1[0]~reg0.CLK
clock => m1[1]~reg0.CLK
clock => m1[2]~reg0.CLK
set[0] => Equal0.IN0
set[0] => Equal1.IN2
set[1] => Equal0.IN2
set[1] => Equal1.IN0
set[2] => Equal0.IN1
set[2] => Equal1.IN1
set[3] => m2.DATAB
set[3] => m1.DATAB
set[4] => m2.DATAB
set[4] => m1.DATAB
set[5] => m2.DATAB
set[5] => m1.DATAB
set[6] => ~NO_FANOUT~
set[7] => ~NO_FANOUT~
set[8] => m2[0]~reg0.ENA
set[8] => m2[1]~reg0.ENA
set[8] => m2[2]~reg0.ENA
set[8] => m1[0]~reg0.ENA
set[8] => m1[1]~reg0.ENA
set[8] => m1[2]~reg0.ENA
set[9] => ~NO_FANOUT~
m1[0] <= m1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m1[1] <= m1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m1[2] <= m1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m2[0] <= m2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m2[1] <= m2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m2[2] <= m2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|manualOverride:mo1
clock => ov2~reg0.CLK
clock => ov1~reg0.CLK
sw[0] => Equal0.IN0
sw[0] => Equal1.IN2
sw[1] => Equal0.IN2
sw[1] => Equal1.IN0
sw[2] => Equal0.IN1
sw[2] => Equal1.IN1
sw[3] => ~NO_FANOUT~
sw[4] => ~NO_FANOUT~
sw[5] => ~NO_FANOUT~
sw[6] => ~NO_FANOUT~
sw[7] => ov1.OUTPUTSELECT
sw[7] => ov2.OUTPUTSELECT
sw[8] => ~NO_FANOUT~
sw[9] => ~NO_FANOUT~
key => ov1.OUTPUTSELECT
key => ov2.OUTPUTSELECT
ov1 <= ov1~reg0.DB_MAX_OUTPUT_PORT_TYPE
ov2 <= ov2~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|dispenser:dm1
clock => clock.IN1
morningP => always0.IN0
afternoonP => always0.IN0
eveningP => always0.IN0
override => dispense.DATAA
m[0] => always0.IN1
m[1] => always0.IN1
m[2] => always0.IN1
GPIO_PORT <= dispense:d.port2


|test|dispenser:dm1|dispense:d
clock => clock.IN1
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => pwmSignal.OUTPUTSELECT
port <= pwm:pwm1.port2


|test|dispenser:dm1|dispense:d|pwm:pwm1
clock => port~reg0.CLK
signal => port.OUTPUTSELECT
port <= port~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|dispenser:dm1t
clock => clock.IN1
morningP => always0.IN0
afternoonP => always0.IN0
eveningP => always0.IN0
override => dispense.DATAA
m[0] => always0.IN1
m[1] => always0.IN1
m[2] => always0.IN1
GPIO_PORT <= dispense:d.port2


|test|dispenser:dm1t|dispense:d
clock => clock.IN1
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => pwmSignal.OUTPUTSELECT
port <= pwm:pwm1.port2


|test|dispenser:dm1t|dispense:d|pwm:pwm1
clock => port~reg0.CLK
signal => port.OUTPUTSELECT
port <= port~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|dispenser:dm2
clock => clock.IN1
morningP => always0.IN0
afternoonP => always0.IN0
eveningP => always0.IN0
override => dispense.DATAA
m[0] => always0.IN1
m[1] => always0.IN1
m[2] => always0.IN1
GPIO_PORT <= dispense:d.port2


|test|dispenser:dm2|dispense:d
clock => clock.IN1
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => counter.OUTPUTSELECT
signal => pwmSignal.OUTPUTSELECT
port <= pwm:pwm1.port2


|test|dispenser:dm2|dispense:d|pwm:pwm1
clock => port~reg0.CLK
signal => port.OUTPUTSELECT
port <= port~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|dispenserEnabled:DE
clock => counter[0].CLK
clock => counter[1].CLK
clock => counter[2].CLK
clock => count.CLK
clock => alarmEnable~reg0.CLK
secondP => alarmEnable.OUTPUTSELECT
secondP => count.OUTPUTSELECT
secondP => counter[0].ENA
secondP => counter[1].ENA
secondP => counter[2].ENA
enable => alarmEnable.OUTPUTSELECT
enable => count.OUTPUTSELECT
alarmEnable <= alarmEnable~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|dispenserEnabled:DE1
clock => counter[0].CLK
clock => counter[1].CLK
clock => counter[2].CLK
clock => count.CLK
clock => alarmEnable~reg0.CLK
secondP => alarmEnable.OUTPUTSELECT
secondP => count.OUTPUTSELECT
secondP => counter[0].ENA
secondP => counter[1].ENA
secondP => counter[2].ENA
enable => alarmEnable.OUTPUTSELECT
enable => count.OUTPUTSELECT
alarmEnable <= alarmEnable~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|hex:h0
out[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0


|test|hex:h1
out[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0


|test|hex:h2
out[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0


|test|hex:h3
out[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0


|test|hex:h4
out[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0


|test|hex:h5
out[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0


